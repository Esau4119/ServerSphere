{"ast":null,"code":"const api = \"http://localhost:0727/signup\";\n\n//Will become Get Users or I will turn this into a dynamic running \n// function for all queries \nconst search = async (username, password, cpassword) => {\n  try {\n    console.log(\"Sending over to reciever:\", {\n      password: password,\n      username: username,\n      cpassword: cpassword\n    });\n    fetch(api, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        cpassword: cpassword\n      })\n    }).then(response => {\n      console.log(response);\n      // if (response.status != 301 && response.status != -1) {\n      // \tconsole.log(\"ok but \", response.status)\n      // \treturn\tresponse.status;\n      // }else if(response.status == 301 || response.status == -1){\n      // \tconsole.log(\"User did sum idk Code: \", response.status)\n      // \treturn\tresponse.status;\n      // }else if(response.status == 403 ){\n      // \tconsole.log(\"User did sum idk Code: \", response.status)\n      // \treturn\tresponse.status;\n      // }else if(!response.ok ){\n\n      // \tthrow new Error(`HTTP error! status: ${response.status}`);\n      // }\n      return response.json();\n    }).then(data => {\n      console.log(\"Response data:\", data);\n\n      // if (data != 301) {\n\n      // \t//window.location.replace(\"http://localhost:3000/\");\n      // \tconsole.log(\"User is nice\")\n\n      // \t// Handle successful login\n      // \t// Save user data to localStorage\n      // \t//sessionStorage.setItem(\"user\", JSON.stringify(data));\n      // \t//window.location.href = \"/login\";\n      // } else {\n      // \tconsole.log(\"user did some\", data);\n      // \t// Handle login failure\n      // }\n    }).catch(error => {\n      console.log(\"Error during fetch operation:\", error);\n      // Handle fetch errors\n    });\n    return;\n  } catch (Err) {\n    console.log(Err);\n  }\n};\nmodule.exports = {\n  search\n};","map":{"version":3,"names":["api","search","username","password","cpassword","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","Err","module","exports"],"sources":["C:/Users/Esau M/Downloads/CSC651/ServerSphere/frontend/src/routes/signup.js"],"sourcesContent":["const api = \"http://localhost:0727/signup\";\n\n//Will become Get Users or I will turn this into a dynamic running \n// function for all queries \nconst search= async(username,password,cpassword)=>{\n   \n  try { \n\t\tconsole.log(\"Sending over to reciever:\", {\n\t\t\tpassword: password,\n\t\t\tusername: username,\n\t\t\tcpassword: cpassword\n\t\t});\n\n\t\tfetch(api, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},body: JSON.stringify({\n\t\t\t\tusername: username,\n\t\t\t\tpassword: password,\n\t\t\t\tcpassword: cpassword\n\t\t\t})\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response)\n\t\t\t\t// if (response.status != 301 && response.status != -1) {\n\t\t\t\t// \tconsole.log(\"ok but \", response.status)\n\t\t\t\t// \treturn\tresponse.status;\n\t\t\t\t// }else if(response.status == 301 || response.status == -1){\n\t\t\t\t// \tconsole.log(\"User did sum idk Code: \", response.status)\n\t\t\t\t// \treturn\tresponse.status;\n\t\t\t\t// }else if(response.status == 403 ){\n\t\t\t\t// \tconsole.log(\"User did sum idk Code: \", response.status)\n\t\t\t\t// \treturn\tresponse.status;\n\t\t\t\t// }else if(!response.ok ){\n\t\t\t\t\t\n\t\t\t\t// \tthrow new Error(`HTTP error! status: ${response.status}`);\n\t\t\t\t// }\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(\"Response data:\", data);\n\n\t\t\t\t// if (data != 301) {\n\n\t\t\t\t// \t//window.location.replace(\"http://localhost:3000/\");\n\t\t\t\t// \tconsole.log(\"User is nice\")\n\t\t\t\t\t\n\t\t\t\t// \t// Handle successful login\n\t\t\t\t// \t// Save user data to localStorage\n\t\t\t\t// \t//sessionStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\t// \t//window.location.href = \"/login\";\n\t\t\t\t// } else {\n\t\t\t\t// \tconsole.log(\"user did some\", data);\n\t\t\t\t// \t// Handle login failure\n\t\t\t\t// }\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t\n\t\t\t\tconsole.log(\"Error during fetch operation:\", error );\n\t\t\t\t// Handle fetch errors\n\t\t\t});\n\t\n    return ;\n } catch(Err){\n    console.log(Err);\n }\n}\n\nmodule.exports= {\n    search\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG,8BAA8B;;AAE1C;AACA;AACA,MAAMC,MAAM,GAAE,MAAAA,CAAMC,QAAQ,EAACC,QAAQ,EAACC,SAAS,KAAG;EAEhD,IAAI;IACJC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;MACxCH,QAAQ,EAAEA,QAAQ;MAClBD,QAAQ,EAAEA,QAAQ;MAClBE,SAAS,EAAEA;IACZ,CAAC,CAAC;IAEFG,KAAK,CAACP,GAAG,EAAE;MACVQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACR,cAAc,EAAE;MACjB,CAAC;MAACC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACtBV,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA,QAAQ;QAClBC,SAAS,EAAEA;MACZ,CAAC;IACF,CAAC,CAAC,CACAS,IAAI,CAAEC,QAAQ,IAAK;MACnBT,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAAC;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACfX,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEU,IAAI,CAAC;;MAEnC;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAEjBb,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEY,KAAM,CAAC;MACpD;IACD,CAAC,CAAC;IAED;EACH,CAAC,CAAC,OAAMC,GAAG,EAAC;IACTd,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC;EACnB;AACD,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAE;EACZpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}