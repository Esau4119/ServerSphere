{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Esau M\\\\Downloads\\\\CSC651\\\\ServerSphere\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport HomePage from './components/HomePage';\nimport { useEffect } from 'react';\nimport SceneInit from './routes/SceneInit';\nimport * as THREE from 'three';\nimport { TeapotGeometry } from 'three/examples/jsm/geometries/TeapotGeometry';\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const test = new SceneInit('myThreeJsCanvas');\n    test.initialize();\n    test.animate();\n\n    // PART 1\n    // Adding geometries to a three.js scene.\n    const boxGeometry = new THREE.BoxGeometry(1, 1, 1, 1, 1, 16);\n    const boxMaterial = new THREE.MeshNormalMaterial({\n      wireframe: true\n    });\n    const boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\n    boxMesh.position.x = -1;\n    test.scene.add(boxMesh);\n\n    // const cylinderGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, 32, 16);\n    // const cylinderMaterial = new THREE.MeshNormalMaterial({ wireframe: true });\n    // const cylinderMesh = new THREE.Mesh(cylinderGeometry, cylinderMaterial);\n    // cylinderMesh.position.x = 1;\n    // test.scene.add(cylinderMesh);\n\n    // const torusGeometry = new THREE.TorusGeometry(0.5, 0.25, 20, 20);\n    // const torusMaterial = new THREE.MeshNormalMaterial({ wireframe: true });\n    // const torusMesh = new THREE.Mesh(torusGeometry, torusMaterial);\n    // test.scene.add(torusMesh);\n\n    // PART 2\n    // Why add width/height segments for a geometry?\n    function vertexShader() {\n      return `\n          varying float z;\n          uniform float u_time;\n          void main() {\n            z = (cos(position.y + u_time) + sin(position.x + u_time)) / 4.0;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position.x, position.y, z + position.z, 1.0);\n          }\n        `;\n    }\n    function fragmentShader() {\n      return `\n          void main() {\n            gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n          }\n        `;\n    }\n    const geometry = new THREE.BoxGeometry(1, 1, 1, 1, 1, 1);\n    const material = new THREE.ShaderMaterial({\n      uniforms: test.uniforms,\n      fragmentShader: fragmentShader(),\n      vertexShader: vertexShader(),\n      wireframe: true\n    });\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.rotation.x = Math.PI / 2;\n    test.scene.add(mesh);\n\n    // PART 3\n    // // Showcase \"hidden\" geometries.\n    // const roundedBoxGeometry = new RoundedBoxGeometry(1, 1, 1, 4, 0.1);\n    // const roundedBoxMaterial = new THREE.MeshNormalMaterial({\n    //   wireframe: true,\n    // });\n    // const roundedBoxMesh = new THREE.Mesh(\n    //   roundedBoxGeometry,\n    //   roundedBoxMaterial\n    // );\n    // roundedBoxMesh.position.x = -1;\n    // test.scene.add(roundedBoxMesh);\n\n    // const teapotGeometry = new TeapotGeometry(0.5, 8);\n    // const teapotMaterial = new THREE.MeshNormalMaterial({ wireframe: true });\n    // const teapotMesh = new THREE.Mesh(teapotGeometry, teapotMaterial);\n    // teapotMesh.position.x = 1;\n    // test.scene.add(teapotMesh);\n\n    const animate = () => {\n      boxMesh.rotateX(0.001);\n      boxMesh.rotateY(0.001);\n      window.requestAnimationFrame(animate);\n    };\n    animate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myThreeJsCanvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","HomePage","useEffect","SceneInit","THREE","TeapotGeometry","RoundedBoxGeometry","jsxDEV","_jsxDEV","App","_s","test","initialize","animate","boxGeometry","BoxGeometry","boxMaterial","MeshNormalMaterial","wireframe","boxMesh","Mesh","position","x","scene","add","vertexShader","fragmentShader","geometry","material","ShaderMaterial","uniforms","mesh","rotation","Math","PI","rotateX","rotateY","window","requestAnimationFrame","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/Esau M/Downloads/CSC651/ServerSphere/frontend/src/App.js"],"sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport HomePage from './components/HomePage'\r\nimport { useEffect } from 'react';\r\nimport SceneInit from './routes/SceneInit';\r\nimport * as THREE from 'three';\r\nimport { TeapotGeometry } from 'three/examples/jsm/geometries/TeapotGeometry';\r\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry';\r\n\r\n\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const test = new SceneInit('myThreeJsCanvas');\r\n    test.initialize();\r\n    test.animate();\r\n\r\n    // PART 1\r\n    // Adding geometries to a three.js scene.\r\n    const boxGeometry = new THREE.BoxGeometry(1, 1, 1, 1, 1, 16);\r\n    const boxMaterial = new THREE.MeshNormalMaterial({ wireframe: true });\r\n    const boxMesh = new THREE.Mesh(boxGeometry, boxMaterial);\r\n    boxMesh.position.x = -1;\r\n    test.scene.add(boxMesh);\r\n\r\n    // const cylinderGeometry = new THREE.CylinderGeometry(0.5, 0.5, 1, 32, 16);\r\n    // const cylinderMaterial = new THREE.MeshNormalMaterial({ wireframe: true });\r\n    // const cylinderMesh = new THREE.Mesh(cylinderGeometry, cylinderMaterial);\r\n    // cylinderMesh.position.x = 1;\r\n    // test.scene.add(cylinderMesh);\r\n\r\n    // const torusGeometry = new THREE.TorusGeometry(0.5, 0.25, 20, 20);\r\n    // const torusMaterial = new THREE.MeshNormalMaterial({ wireframe: true });\r\n    // const torusMesh = new THREE.Mesh(torusGeometry, torusMaterial);\r\n    // test.scene.add(torusMesh);\r\n\r\n    // PART 2\r\n    // Why add width/height segments for a geometry?\r\n    function vertexShader() {\r\n      return `\r\n          varying float z;\r\n          uniform float u_time;\r\n          void main() {\r\n            z = (cos(position.y + u_time) + sin(position.x + u_time)) / 4.0;\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position.x, position.y, z + position.z, 1.0);\r\n          }\r\n        `;\r\n    }\r\n    function fragmentShader() {\r\n      return `\r\n          void main() {\r\n            gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\r\n          }\r\n        `;\r\n    }\r\n    const geometry = new THREE.BoxGeometry(1, 1, 1, 1, 1, 1);\r\n    const material = new THREE.ShaderMaterial({\r\n      uniforms: test.uniforms,\r\n      fragmentShader: fragmentShader(),\r\n      vertexShader: vertexShader(),\r\n      wireframe: true,\r\n    });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.rotation.x = Math.PI / 2;\r\n    test.scene.add(mesh);\r\n\r\n    // PART 3\r\n    // // Showcase \"hidden\" geometries.\r\n    // const roundedBoxGeometry = new RoundedBoxGeometry(1, 1, 1, 4, 0.1);\r\n    // const roundedBoxMaterial = new THREE.MeshNormalMaterial({\r\n    //   wireframe: true,\r\n    // });\r\n    // const roundedBoxMesh = new THREE.Mesh(\r\n    //   roundedBoxGeometry,\r\n    //   roundedBoxMaterial\r\n    // );\r\n    // roundedBoxMesh.position.x = -1;\r\n    // test.scene.add(roundedBoxMesh);\r\n\r\n    // const teapotGeometry = new TeapotGeometry(0.5, 8);\r\n    // const teapotMaterial = new THREE.MeshNormalMaterial({ wireframe: true });\r\n    // const teapotMesh = new THREE.Mesh(teapotGeometry, teapotMaterial);\r\n    // teapotMesh.position.x = 1;\r\n    // test.scene.add(teapotMesh);\r\n\r\n    const animate = () => {\r\n      boxMesh.rotateX(0.001);\r\n      boxMesh.rotateY(0.001);\r\n      window.requestAnimationFrame(animate);\r\n    };\r\n    animate();\r\n  }, []);\r\n\r\n  return (\r\n    <div>  \r\n      <HomePage/>\r\n      <canvas id=\"myThreeJsCanvas\">\r\n      \r\n      \r\n      </canvas>\r\n    \r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}