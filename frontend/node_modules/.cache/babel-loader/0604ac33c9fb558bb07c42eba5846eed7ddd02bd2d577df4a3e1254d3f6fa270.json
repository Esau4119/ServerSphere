{"ast":null,"code":"import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nexport default class SceneInit {\n  constructor(canvasId) {\n    // NOTE: Core components to initialize Three.js app.\n    this.scene = undefined;\n    this.camera = undefined;\n    this.renderer = undefined;\n\n    // NOTE: Camera params;\n    this.fov = 45;\n    this.nearPlane = 1;\n    this.farPlane = 1000;\n    this.canvasId = canvasId;\n\n    // NOTE: Additional components.\n    this.clock = undefined;\n    this.stats = undefined;\n    this.controls = undefined;\n\n    // NOTE: Lighting is basically required.\n    this.spotLight = undefined;\n    this.ambientLight = undefined;\n  }\n  initialize() {\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(this.fov, window.innerWidth / window.innerHeight, 1, 1000);\n    this.camera.position.z = 4;\n\n    // NOTE: Specify a canvas which is already created in the HTML.\n    const canvas = document.getElementById(this.canvasId);\n    this.renderer = new THREE.WebGLRenderer({\n      canvas,\n      // NOTE: Anti-aliasing smooths out the edges.\n      antialias: true\n    });\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(this.renderer.domElement);\n    this.clock = new THREE.Clock();\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.stats = Stats();\n    document.body.appendChild(this.stats.dom);\n\n    // ambient light which is for the whole scene\n    this.ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    this.ambientLight.castShadow = true;\n    this.scene.add(this.ambientLight);\n\n    // spot light which is illuminating the chart directly\n    this.spotLight = new THREE.SpotLight(0xffffff, 1);\n    this.spotLight.castShadow = true;\n    this.spotLight.position.set(0, 64, 32);\n    this.scene.add(this.spotLight);\n\n    // if window resizes\n    window.addEventListener('resize', () => this.onWindowResize(), false);\n\n    // NOTE: Load space background.\n    // this.loader = new THREE.TextureLoader();\n    // this.scene.background = this.loader.load('./pics/space.jpeg');\n\n    // NOTE: Declare uniforms to pass into glsl shaders.\n    this.uniforms = {\n      u_time: {\n        type: 'f',\n        value: 1.0\n      },\n      colorB: {\n        type: 'vec3',\n        value: new THREE.Color(0xfff000)\n      },\n      colorA: {\n        type: 'vec3',\n        value: new THREE.Color(0xffffff)\n      }\n    };\n  }\n  animate() {\n    // NOTE: Window is implied.\n    // requestAnimationFrame(this.animate.bind(this));\n    window.requestAnimationFrame(this.animate.bind(this));\n    this.render();\n    this.stats.update();\n    this.controls.update();\n  }\n  render() {\n    // NOTE: Update uniform data on each render.\n    this.uniforms.u_time.value += this.clock.getDelta();\n    this.renderer.render(this.scene, this.camera);\n  }\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n}","map":{"version":3,"names":["THREE","OrbitControls","Stats","SceneInit","constructor","canvasId","scene","undefined","camera","renderer","fov","nearPlane","farPlane","clock","stats","controls","spotLight","ambientLight","initialize","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","z","canvas","document","getElementById","WebGLRenderer","antialias","setSize","body","appendChild","domElement","Clock","dom","AmbientLight","castShadow","add","SpotLight","set","addEventListener","onWindowResize","uniforms","u_time","type","value","colorB","Color","colorA","animate","requestAnimationFrame","bind","render","update","getDelta","aspect","updateProjectionMatrix"],"sources":["C:/Users/Esau M/Downloads/CSC651/ServerSphere/frontend/src/routes/SceneInit.js"],"sourcesContent":["import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport Stats from 'three/examples/jsm/libs/stats.module';\r\n\r\nexport default class SceneInit {\r\n  constructor(canvasId) {\r\n    // NOTE: Core components to initialize Three.js app.\r\n    this.scene = undefined;\r\n    this.camera = undefined;\r\n    this.renderer = undefined;\r\n\r\n    // NOTE: Camera params;\r\n    this.fov = 45;\r\n    this.nearPlane = 1;\r\n    this.farPlane = 1000;\r\n    this.canvasId = canvasId;\r\n\r\n    // NOTE: Additional components.\r\n    this.clock = undefined;\r\n    this.stats = undefined;\r\n    this.controls = undefined;\r\n\r\n    // NOTE: Lighting is basically required.\r\n    this.spotLight = undefined;\r\n    this.ambientLight = undefined;\r\n  }\r\n\r\n  initialize() {\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      this.fov,\r\n      window.innerWidth / window.innerHeight,\r\n      1,\r\n      1000\r\n    );\r\n    this.camera.position.z = 4;\r\n\r\n    // NOTE: Specify a canvas which is already created in the HTML.\r\n    const canvas = document.getElementById(this.canvasId);\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      canvas,\r\n      // NOTE: Anti-aliasing smooths out the edges.\r\n      antialias: true,\r\n    });\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    document.body.appendChild(this.renderer.domElement);\r\n\r\n    this.clock = new THREE.Clock();\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.stats = Stats();\r\n    document.body.appendChild(this.stats.dom);\r\n\r\n    // ambient light which is for the whole scene\r\n    this.ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n    this.ambientLight.castShadow = true;\r\n    this.scene.add(this.ambientLight);\r\n\r\n    // spot light which is illuminating the chart directly\r\n    this.spotLight = new THREE.SpotLight(0xffffff, 1);\r\n    this.spotLight.castShadow = true;\r\n    this.spotLight.position.set(0, 64, 32);\r\n    this.scene.add(this.spotLight);\r\n\r\n    // if window resizes\r\n    window.addEventListener('resize', () => this.onWindowResize(), false);\r\n\r\n    // NOTE: Load space background.\r\n    // this.loader = new THREE.TextureLoader();\r\n    // this.scene.background = this.loader.load('./pics/space.jpeg');\r\n\r\n    // NOTE: Declare uniforms to pass into glsl shaders.\r\n    this.uniforms = {\r\n      u_time: { type: 'f', value: 1.0 },\r\n      colorB: { type: 'vec3', value: new THREE.Color(0xfff000) },\r\n      colorA: { type: 'vec3', value: new THREE.Color(0xffffff) },\r\n    };\r\n  }\r\n\r\n  animate() {\r\n    // NOTE: Window is implied.\r\n    // requestAnimationFrame(this.animate.bind(this));\r\n    window.requestAnimationFrame(this.animate.bind(this));\r\n    this.render();\r\n    this.stats.update();\r\n    this.controls.update();\r\n  }\r\n\r\n  render() {\r\n    // NOTE: Update uniform data on each render.\r\n    this.uniforms.u_time.value += this.clock.getDelta();\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  onWindowResize() {\r\n    this.camera.aspect = window.innerWidth / window.innerHeight;\r\n    this.camera.updateProjectionMatrix();\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}