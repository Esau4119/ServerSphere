{"ast":null,"code":"import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n// Setup\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer({\n  canvas: document.querySelector('#bg')\n});\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.setSize(window.innerWidth, window.innerHeight);\ncamera.position.setZ(30);\ncamera.position.setX(-3);\nrenderer.render(scene, camera);\n\n// Torus\n\nconst geometry = new THREE.TorusGeometry(10, 3, 16, 100);\nconst material = new THREE.MeshStandardMaterial({\n  color: 0xff6347\n});\nconst torus = new THREE.Mesh(geometry, material);\nscene.add(torus);\n\n// Lights\n\nconst pointLight = new THREE.PointLight(0xffffff);\npointLight.position.set(5, 5, 5);\nconst ambientLight = new THREE.AmbientLight(0xffffff);\nscene.add(pointLight, ambientLight);\n\n// Helpers\n\n// const lightHelper = new THREE.PointLightHelper(pointLight)\n// const gridHelper = new THREE.GridHelper(200, 50);\n// scene.add(lightHelper, gridHelper)\n\n// const controls = new OrbitControls(camera, renderer.domElement);\n\nfunction addStar() {\n  const geometry = new THREE.SphereGeometry(0.25, 24, 24);\n  const material = new THREE.MeshStandardMaterial({\n    color: 0xffffff\n  });\n  const star = new THREE.Mesh(geometry, material);\n  const [x, y, z] = Array(3).fill().map(() => THREE.MathUtils.randFloatSpread(100));\n  star.position.set(x, y, z);\n  scene.add(star);\n}\nArray(200).fill().forEach(addStar);\n\n// Background\n\nconst spaceTexture = new THREE.TextureLoader().load('space.jpg');\nscene.background = spaceTexture;\n\n// Avatar\n\nconst jeffTexture = new THREE.TextureLoader().load('jeff.png');\nconst jeff = new THREE.Mesh(new THREE.BoxGeometry(3, 3, 3), new THREE.MeshBasicMaterial({\n  map: jeffTexture\n}));\nscene.add(jeff);\n\n// Scroll Animation\n\nfunction moveCamera() {\n  const t = document.body.getBoundingClientRect().top;\n  camera.position.z = t * -0.01;\n  camera.position.x = t * -0.0002;\n  camera.rotation.y = t * -0.0002;\n}\ndocument.body.onscroll = moveCamera;\nmoveCamera();\n\n// Animation Loop\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  torus.rotation.x += 0.01;\n  torus.rotation.y += 0.005;\n  torus.rotation.z += 0.01;\n  moon.rotation.x += 0.005;\n\n  // controls.update();\n\n  renderer.render(scene, camera);\n}\nanimate();","map":{"version":3,"names":["THREE","OrbitControls","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","canvas","document","querySelector","setPixelRatio","devicePixelRatio","setSize","position","setZ","setX","render","geometry","TorusGeometry","material","MeshStandardMaterial","color","torus","Mesh","add","pointLight","PointLight","set","ambientLight","AmbientLight","addStar","SphereGeometry","star","x","y","z","Array","fill","map","MathUtils","randFloatSpread","forEach","spaceTexture","TextureLoader","load","background","jeffTexture","jeff","BoxGeometry","MeshBasicMaterial","moveCamera","t","body","getBoundingClientRect","top","rotation","onscroll","animate","requestAnimationFrame","moon"],"sources":["C:/Users/Esau M/Downloads/CSC651/ServerSphere/frontend/src/components/j.js"],"sourcesContent":["\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\n// Setup\r\n\r\nconst scene = new THREE.Scene();\r\n\r\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n\r\nconst renderer = new THREE.WebGLRenderer({\r\n  canvas: document.querySelector('#bg'),\r\n});\r\n\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ncamera.position.setZ(30);\r\ncamera.position.setX(-3);\r\n\r\nrenderer.render(scene, camera);\r\n\r\n// Torus\r\n\r\nconst geometry = new THREE.TorusGeometry(10, 3, 16, 100);\r\nconst material = new THREE.MeshStandardMaterial({ color: 0xff6347 });\r\nconst torus = new THREE.Mesh(geometry, material);\r\n\r\nscene.add(torus);\r\n\r\n// Lights\r\n\r\nconst pointLight = new THREE.PointLight(0xffffff);\r\npointLight.position.set(5, 5, 5);\r\n\r\nconst ambientLight = new THREE.AmbientLight(0xffffff);\r\nscene.add(pointLight, ambientLight);\r\n\r\n// Helpers\r\n\r\n// const lightHelper = new THREE.PointLightHelper(pointLight)\r\n// const gridHelper = new THREE.GridHelper(200, 50);\r\n// scene.add(lightHelper, gridHelper)\r\n\r\n// const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\nfunction addStar() {\r\n  const geometry = new THREE.SphereGeometry(0.25, 24, 24);\r\n  const material = new THREE.MeshStandardMaterial({ color: 0xffffff });\r\n  const star = new THREE.Mesh(geometry, material);\r\n\r\n  const [x, y, z] = Array(3)\r\n    .fill()\r\n    .map(() => THREE.MathUtils.randFloatSpread(100));\r\n\r\n  star.position.set(x, y, z);\r\n  scene.add(star);\r\n}\r\n\r\nArray(200).fill().forEach(addStar);\r\n\r\n// Background\r\n\r\nconst spaceTexture = new THREE.TextureLoader().load('space.jpg');\r\nscene.background = spaceTexture;\r\n\r\n// Avatar\r\n\r\nconst jeffTexture = new THREE.TextureLoader().load('jeff.png');\r\n\r\nconst jeff = new THREE.Mesh(new THREE.BoxGeometry(3, 3, 3), new THREE.MeshBasicMaterial({ map: jeffTexture }));\r\n\r\nscene.add(jeff);\r\n\r\n\r\n\r\n// Scroll Animation\r\n\r\nfunction moveCamera() {\r\n  const t = document.body.getBoundingClientRect().top;\r\n\r\n\r\n  camera.position.z = t * -0.01;\r\n  camera.position.x = t * -0.0002;\r\n  camera.rotation.y = t * -0.0002;\r\n}\r\n\r\ndocument.body.onscroll = moveCamera;\r\nmoveCamera();\r\n\r\n// Animation Loop\r\n\r\nfunction animate() {\r\n  requestAnimationFrame(animate);\r\n\r\n  torus.rotation.x += 0.01;\r\n  torus.rotation.y += 0.005;\r\n  torus.rotation.z += 0.01;\r\n\r\n  moon.rotation.x += 0.005;\r\n\r\n  // controls.update();\r\n\r\n  renderer.render(scene, camera);\r\n}\r\n\r\nanimate();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}